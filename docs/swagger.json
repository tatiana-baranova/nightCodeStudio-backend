{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Money Guard App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Money Guard"
  },
  "servers": [
    {
      "url": "https://nightcodestudio-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Operations about authentication."
    },
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Transactions",
      "description": "Operations about transactions."
    },
    {
      "name": "Categories",
      "description": "Operations about categories."
    },
    {
      "name": "Summary",
      "description": "Operations about summary statistics."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 32,
                    "description": "User's name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 64,
                    "description": "User's email address",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "description": "User's password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered an user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message - data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The email is already in use"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login an user",
        "operationId": "loginUser",
        "description": "Login an user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 64,
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "randomToken123"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=randomToken123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=randomSessionId123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email or password is wrong"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUsersSession",
        "description": "Refresh user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "newAccessToken123"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=newRefreshToken123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=newSessionId123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout an user",
        "operationId": "logoutUser",
        "description": "Logout an user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid session ID"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Session not found or token invalid"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Current user data",
        "operationId": "getCurrentUser",
        "description": "Returns information about the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Authenticated user info"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user data",
        "operationId": "patchUser",
        "description": "Update current user data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/photo": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user's profile photo",
        "operationId": "updateUserPhoto",
        "description": "Allows the user to update their profile photo.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "New user's profile photo",
                    "example": "C:\\Users\\OneDrive\\Pictures\\photo.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User photo updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user photo!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get income and expense categories",
        "operationId": "getCategories",
        "description": "Returns a list of income and expense categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched categories!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "income": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/category"
                          }
                        },
                        "expenses": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/category"
                          }
                        }
                      },
                      "example": {
                        "income": [
                          {
                            "_id": "6804058087a5c385d8e99714",
                            "title": "Incomes"
                          }
                        ],
                        "expenses": [
                          {
                            "_id": "6804059587a5c385d8e99716",
                            "title": "Main expenses"
                          },
                          {
                            "_id": "680405a687a5c385d8e99718",
                            "title": "Products"
                          },
                          {
                            "_id": "680405b587a5c385d8e9971a",
                            "title": "Car"
                          },
                          {
                            "_id": "680405c787a5c385d8e9971c",
                            "title": "Self care"
                          },
                          {
                            "_id": "680405d987a5c385d8e9971e",
                            "title": "Child care"
                          },
                          {
                            "_id": "680405e787a5c385d8e99720",
                            "title": "Household products"
                          },
                          {
                            "_id": "680405f687a5c385d8e99722",
                            "title": "Education"
                          },
                          {
                            "_id": "6804060687a5c385d8e99724",
                            "title": "Leisure"
                          },
                          {
                            "_id": "6804061187a5c385d8e99726",
                            "title": "Other expenses"
                          },
                          {
                            "_id": "6804061d87a5c385d8e99728",
                            "title": "Entertainment"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new transaction",
        "operationId": "createTransaction",
        "description": "Create a new transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTransactionSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction created"
                    },
                    "date": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "682ccfeb2c00a73c70794bde"
                        },
                        "type": {
                          "type": "string",
                          "example": "expenses"
                        },
                        "category": {
                          "type": "string",
                          "example": "682cce37a20bd13853731499"
                        },
                        "amount": {
                          "type": "number",
                          "example": 2800
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-05-20T00:00:00.000+00:00"
                        },
                        "comment": {
                          "type": "string",
                          "example": "Products for week"
                        },
                        "userId": {
                          "type": "string",
                          "example": "682ca952b3743090c7cf9c1e"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions",
        "operationId": "getAllTransactions",
        "description": "Get all transactions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully all transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "transactions"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get all transactions"
                    },
                    "transactions": {
                      "$ref": "#/components/schemas/transaction"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/transactions/{id}": {
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction by Id",
        "operationId": "deleteTransaction",
        "description": "Delete transaction by Id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "680e21ddc1ef3c47b8a1f6ca"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update a transaction",
        "operationId": "updateTransaction",
        "description": "Partially update a transaction by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6830d7eb7c7d3647c5d702b4"
            },
            "description": "The ID of the transaction to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateTransaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/transactions/summary": {
      "get": {
        "tags": [
          "Summary"
        ],
        "summary": "Retrieve transaction summary for a specific period",
        "operationId": "getSummary",
        "description": "Retrieves a summary of transactions for the authenticated user within the specified period (YYYY-MM). The response includes income and expense details by category, total income, total expense, and balance.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "required": true,
            "description": "The period for which to retrieve the summary, in YYYY-MM format (e.g., 2025-05).",
            "example": "2025-05",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[0-2])$",
              "example": "2025-05"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved transaction summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved summary for period 2025-05!"
                    },
                    "income": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "categoryId": {
                            "type": "string",
                            "example": "6804058087a5c385d8e99714"
                          },
                          "title": {
                            "type": "string",
                            "example": "Incomes"
                          },
                          "total": {
                            "type": "number",
                            "example": 50000
                          }
                        }
                      }
                    },
                    "expenses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "categoryId": {
                            "type": "string",
                            "example": "6804060687a5c385d8e99724"
                          },
                          "title": {
                            "type": "string",
                            "example": "Leisure"
                          },
                          "total": {
                            "type": "number",
                            "example": 10000
                          }
                        }
                      }
                    },
                    "totalIncome": {
                      "type": "number",
                      "example": 50000
                    },
                    "totalExpenses": {
                      "type": "number",
                      "example": 10000
                    },
                    "balance": {
                      "type": "number",
                      "example": 40000
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "message": "Successfully retrieved summary for period 2025-05!",
                  "income": [
                    {
                      "categoryId": "6804058087a5c385d8e99714",
                      "title": "Incomes",
                      "total": 50000
                    }
                  ],
                  "expenses": [
                    {
                      "categoryId": "6804060687a5c385d8e99724",
                      "title": "Leisure",
                      "total": 10000
                    }
                  ],
                  "totalIncome": 50000,
                  "totalExpenses": 10000,
                  "balance": 40000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "category": {
        "type": "object",
        "required": [
          "_id",
          "title"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "661a15348f1b9bcdbe48eecc"
          },
          "title": {
            "type": "string",
            "example": "Products"
          }
        }
      },
      "updateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "New name",
            "minLength": 2,
            "maxLength": 32,
            "example": "Jon Smith"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password",
          "balance",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54fa6",
            "readOnly": true
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "minLength": 2,
            "maxLength": 32,
            "example": "Jane Smith"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "janesmith11@gmail.com",
            "readOnly": true
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "010203Acd030201"
          },
          "balance": {
            "description": "User's balance",
            "type": "number",
            "example": "10000",
            "readOnly": true
          },
          "photo": {
            "description": "URL of the user's photo",
            "type": "string",
            "format": "uri",
            "example": "https://res.cloudinary.com/d9tokskxo/image/upload/v1640000000/67dd4fb6c1e25079abca809c.jpg"
          },
          "createdAt": {
            "description": "Timestamp of user creation",
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          },
          "updatedAt": {
            "description": "Timestamp of the latest update of an user",
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T12:00:00Z"
          }
        }
      },
      "createTransactionSchema": {
        "type": "object",
        "required": [
          "type",
          "category",
          "amount",
          "date"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expenses"
            ],
            "example": "expenses",
            "description": "Type of transaction"
          },
          "amount": {
            "type": "number",
            "minLength": 1,
            "maxLength": 1000000,
            "example": 2800,
            "description": "Transaction amount"
          },
          "category": {
            "type": "string",
            "example": "Products",
            "description": "Products"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-05-20",
            "description": "Date in format YYYY-MM-DD"
          },
          "comment": {
            "type": "string",
            "example": "Products for week",
            "description": "Transaction comment (optional)"
          }
        }
      },
      "transaction": {
        "type": "object",
        "required": [
          "_id",
          "type",
          "category",
          "amount",
          "date",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "682ccfeb2c00a73c70794bde"
          },
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expenses"
            ],
            "example": "income"
          },
          "category": {
            "type": "object",
            "required": [
              "_id",
              "title",
              "type"
            ],
            "properties": {
              "_id": {
                "type": "string",
                "example": "682cce37a20bd13853731497"
              },
              "title": {
                "type": "string",
                "example": "Incomes"
              },
              "type": {
                "type": "string",
                "enum": [
                  "income",
                  "expense"
                ],
                "example": "income"
              }
            }
          },
          "amount": {
            "type": "number",
            "minimum": 0.01,
            "maximum": 1000000,
            "example": 10000
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-20"
          },
          "comment": {
            "type": "string",
            "example": "Salary"
          },
          "userId": {
            "type": "string",
            "example": "682ca952b3743090c7cf9c1e"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-20T18:54:35.507Z"
          }
        }
      },
      "updateTransaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expenses"
            ],
            "example": "income"
          },
          "category": {
            "type": "string",
            "example": "Incomes",
            "description": "Category ID (Mongo ObjectId)"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01,
            "maximum": 1000000,
            "example": 10000
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-20"
          },
          "comment": {
            "type": "string",
            "example": "Salary",
            "minLength": 2,
            "maxLength": 100
          }
        },
        "required": []
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid request body or user ID"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}