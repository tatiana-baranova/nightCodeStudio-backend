{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Money Guard App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Money Guard"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nightcodestudio-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Operations about authentication."
    },
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Transactions",
      "description": "Operations about transactions."
    },
    {
      "name": "Categories",
      "description": "Operations about categories."
    },
    {
      "name": "Summary",
      "description": "Operations about summary statistics."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 32,
                    "description": "User's name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 64,
                    "description": "User's email address",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "description": "User's password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered an user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message - data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The email is already in use"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login an user",
        "operationId": "loginUser",
        "description": "Login an user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 64,
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "randomToken123"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=randomToken123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=randomSessionId123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email or password is wrong"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUsersSession",
        "description": "Refresh user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "newAccessToken123"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=newRefreshToken123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=newSessionId123; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout an user",
        "operationId": "logoutUser",
        "description": "Logout an user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refreshToken=; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT; sessionId=; HttpOnly; Expires=Wed, 01 Jan 2025 00:00:00 GMT"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid session ID"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Session not found or token invalid"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Current user data",
        "operationId": "getCurrentUser",
        "description": "Returns information about the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Authenticated user info"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user data",
        "operationId": "patchUser",
        "description": "Update current user data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get income and expense categories",
        "operationId": "getCategories",
        "description": "Returns a list of income and expense categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched categories!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "income": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/category"
                          }
                        },
                        "expense": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/category"
                          }
                        }
                      },
                      "example": {
                        "income": [
                          {
                            "_id": "6804058087a5c385d8e99714",
                            "title": "Incomes"
                          }
                        ],
                        "expense": [
                          {
                            "_id": "6804059587a5c385d8e99716",
                            "title": "Main expenses"
                          },
                          {
                            "_id": "680405a687a5c385d8e99718",
                            "title": "Products"
                          },
                          {
                            "_id": "680405b587a5c385d8e9971a",
                            "title": "Car"
                          },
                          {
                            "_id": "680405c787a5c385d8e9971c",
                            "title": "Self care"
                          },
                          {
                            "_id": "680405d987a5c385d8e9971e",
                            "title": "Child care"
                          },
                          {
                            "_id": "680405e787a5c385d8e99720",
                            "title": "Household products"
                          },
                          {
                            "_id": "680405f687a5c385d8e99722",
                            "title": "Education"
                          },
                          {
                            "_id": "6804060687a5c385d8e99724",
                            "title": "Leisure"
                          },
                          {
                            "_id": "6804061187a5c385d8e99726",
                            "title": "Other expenses"
                          },
                          {
                            "_id": "6804061d87a5c385d8e99728",
                            "title": "Entertainment"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "category": {
        "type": "object",
        "required": [
          "_id",
          "title"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "661a15348f1b9bcdbe48eecc"
          },
          "title": {
            "type": "string",
            "example": "Products"
          }
        }
      },
      "updateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "New name",
            "example": "Jon Smith"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password",
          "balance"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54fa6"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Jane Smith"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "janesmith11@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "010203Acd030201"
          },
          "balance": {
            "description": "User's balance",
            "type": "number",
            "example": "10000"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid request body or user ID"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}